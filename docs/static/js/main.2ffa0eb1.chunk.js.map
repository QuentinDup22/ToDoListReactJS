{"version":3,"sources":["components/NavBar.js","components/ToDo.js","components/ToDoList.js","components/AddTask.js","data.js","components/App.js","index.js"],"names":["NavBar","onDeleteCompleted","className","to","exact","onClick","ToDo","state","completed","props","task","toggleCompleted","setState","prevState","onToggleCompleted","id","this","name","React","Component","ToDoList","filteredTasks","tasks","match","params","filter","length","Fragment","map","AddTask","handleSubmit","event","preventDefault","console","log","newTask","value","onAddTask","history","push","onSubmit","htmlFor","type","required","ref","elem","data","App","localStorage","getItem","JSON","parse","taskId","taskToUpdate","find","newTaskName","uniqid","process","componentDidMount","shouldComponentUpdate","componentDidUpdate","setItem","stringify","componentWillUnmount","path","render","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.2ffa0eb1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { FaListAlt, FaCheckSquare, FaPlusSquare, FaTrash } from 'react-icons/fa';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nconst NavBar = ({onDeleteCompleted}) => (\r\n    <footer className=\"p-3 bg-light\">\r\n        <div className=\"btn-group\">\r\n            <NavLink to=\"/\" className=\"btn btn-outline-dark\" exact={true}><FaListAlt /></NavLink>\r\n            <NavLink to=\"/completed\" className=\"btn btn-outline-dark\"><FaCheckSquare /></NavLink>\r\n            <NavLink to=\"/add-task\" className=\"btn btn-outline-dark\"><FaPlusSquare /></NavLink>\r\n        </div>\r\n        <button className=\"btn btn-sm btn-outline-success float-end\" onClick={onDeleteCompleted}><FaTrash /></button>\r\n    </footer>\r\n)\r\n\r\nexport default NavBar","import React from 'react';\r\nimport { FaCheck } from 'react-icons/fa';\r\n\r\nclass ToDo extends React.Component {\r\n\r\n  state = {\r\n    completed: this.props.task.completed\r\n  }\r\n\r\n  toggleCompleted = () => {\r\n    this.setState(prevState => ({\r\n      completed: !prevState.completed\r\n    }))\r\n\r\n    this.props.onToggleCompleted(this.props.task.id)\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li className={\"list-group-item \" + (this.state.completed ? \"bg-success text-white\" : null)}>\r\n        {this.props.task.name}\r\n        <button className={\"btn btn-sm btn-outline-success float-end \" + (this.state.completed ? \"btn-outline-light\" : null)} onClick={() => this.toggleCompleted()}><FaCheck /></button>\r\n      </li >\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToDo;","import React from 'react';\r\nimport Todo from './ToDo';\r\n\r\n\r\nconst ToDoList = ({ tasks, match, onToggleCompleted }) => {\r\n\r\n  let filteredTasks;\r\n\r\n  switch (match.params.filter) {\r\n    case 'completed':\r\n      filteredTasks = tasks.filter(task => task.completed);\r\n      break;\r\n    default:\r\n      filteredTasks = tasks;\r\n  }\r\n  if (filteredTasks.length === 0) {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"m-3\">My to-do-list app</h1>\r\n        <li className=\"list-group-item\">No task to display here</li>\r\n      </React.Fragment >\r\n    )\r\n  } else {\r\n    return (\r\n      <React.Fragment>\r\n        <h1 className=\"m-3\">My to-do-list</h1>\r\n            <ul className=\"list-group m-3\">\r\n            {\r\n                filteredTasks.map((task) => <Todo task={task} key={task.id} onToggleCompleted={onToggleCompleted} />)\r\n            }\r\n            </ul>\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ToDoList;","import React from 'react';\r\n\r\nclass AddTask extends React.Component {\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        console.log(this.newTask.value)\r\n        this.props.onAddTask(this.newTask.value)\r\n        this.props.history.push('/')\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n                <h1 className=\"m-3\">New Task</h1>\r\n                <div className=\"card m-3\">\r\n                    <form className=\"card-body\" onSubmit={ event => this.handleSubmit(event) }>\r\n                        <div className=\"form-group m-2\">\r\n                            <label htmlFor=\"taskName\">Task Name</label>\r\n                            <input className=\"form-control\" type=\"text\" name=\"taskName\" id=\"taskName\" required ref={elem => this.newTask = elem}></input>\r\n                        </div>\r\n                        <button type=\"submit\" className=\"btn btn-success m-2\">Add Task</button>\r\n                    </form>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddTask","let data = [\r\n    {id:'123456a', name: \"Wake up\", completed: false},\r\n    {id:'123456b', name: \"Take a shower\", completed: false},\r\n    {id:'123456c', name: \"Drink coffee\", completed: false},\r\n    {id:'123456d', name: \"Eat breakfast\", completed: false},\r\n    {id:'123456e', name: \"Start Teams\", completed: false}\r\n]\r\n\r\nexport default data","import React from 'react';\r\nimport NavBar from './NavBar';\r\nimport ToDoList from './ToDoList';\r\nimport AddTask from './AddTask';\r\nimport data from '../data';\r\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\r\nimport uniqid from 'uniqid';\r\n\r\nclass App extends React.Component{\r\n\r\n    state = {\r\n        tasks: localStorage.getItem('data') ? JSON.parse(localStorage.getItem('data')) : data\r\n    }\r\n\r\n    onToggleCompleted = (taskId) => {\r\n        let taskToUpdate = this.state.tasks.find( task => task.id === taskId )\r\n        taskToUpdate.completed = !taskToUpdate.completed\r\n\r\n        this.setState(prevState => (\r\n            prevState.tasks.map(task => {\r\n                return task.id === taskId ? taskToUpdate : task\r\n            })\r\n        ))\r\n\r\n        // localStorage.setItem('data', JSON.stringify(this.state.tasks))\r\n    }\r\n\r\n    onAddTask = (newTaskName) => {\r\n        let newTask = {\r\n            id: uniqid.process(),\r\n            name: newTaskName,\r\n            completed: false\r\n        }\r\n        console.log(newTask)\r\n\r\n        this.setState(prevState => ({\r\n            tasks: [...prevState.tasks, newTask]\r\n        }))\r\n\r\n        /* setTimeout( () => {\r\n        localStorage.setItem('data', JSON.stringify(this.state.tasks))\r\n        }, 500) */\r\n\r\n    }\r\n\r\n    onDeleteCompleted = () => {\r\n        this.setState(prevState => {\r\n            let newState = prevState.tasks.filter(task => !task.completed )\r\n            return {\r\n                tasks: newState\r\n            }\r\n        })\r\n\r\n        /* setTimeout( () => {\r\n        localStorage.setItem('data', JSON.stringify(this.state.tasks))\r\n        }, 500) */\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        console.log('Hello from componentDidMount');\r\n        return true\r\n    }\r\n\r\n    shouldComponentUpdate = () => {\r\n        console.log('Hello from shouldComponentUpdate');\r\n        return true\r\n    }\r\n\r\n    componentDidUpdate = () => {\r\n        localStorage.setItem('data', JSON.stringify(this.state.tasks));\r\n        console.log('Hello from componentDidUpdate');\r\n        return true\r\n    }\r\n    componentWillUnmount = () => {\r\n        console.log('Hello from componentWillUnmount');\r\n        return true\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <section>\r\n                <BrowserRouter>\r\n                <Switch>\r\n                    <Route path=\"/add-task\" render={ (props) => <AddTask {...props} onAddTask={this.onAddTask} />} />\r\n                    <Route path=\"/:filter?\" render={ (props) => <ToDoList {...props} tasks={this.state.tasks} onToggleCompleted={this.onToggleCompleted} />} />\r\n                </Switch>\r\n                <NavBar onDeleteCompleted={this.onDeleteCompleted} />\r\n                </BrowserRouter>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './custom.css';\nimport App from './components/App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}